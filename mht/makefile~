#
# Makefile last modified 4/18/95
# Ingemar J. Cox
#

# Some of the code that this makefile compiles generates
# a few warning messages.  In particular, "_G_errStream defined
# but not used".  These can be ignored.

# --------------------------------------------- macros

# One of the following two versions of C++FLAGS should be
# commented out.  Be sure, also, to comment out the desired
# combination of TSTBUG and DEBUG in except.h.  These
# make much bigger differences in speed than the -g and -O
# flags.

C++ = g++
AR = /usr/local/bin/ar
ARFLAGS = -ruc 
INC = .
C++FLAGS = -O 
build = $(C++) $(C++FLAGS) -o $@ 
touch = touch $@

libmht.a: libmht.a(apqueue.o) libmht.a(assign.o) \
	  libmht.a(except.o) \
	  libmht.a(links.o) libmht.a(list.o) \
	  libmht.a(matrix.o) libmht.a(mem.o) libmht.a(mdlmht.o) \
	  libmht.a(mht.o) libmht.a(mht_group.o) \
	  libmht.a(mht_report.o) libmht.a(mht_track.o) \
	  libmht.a(tree.o)
	  $(C++) $(C++FLAGS) -c $(?:.o=.c)
	  $(AR) $(ARFLAGS) libmht.a $?
	  rm $?  
	  @echo lib is now up-to-date
.c.a:;

apqueue_test: apqueue_test.o libmht.a
	$(build) apqueue_test.o -L . -lmht -lm

assign_test: assign_test.o bassign.o libmht.a
	$(build) assign_test.o bassign.o -L . -lmht -lm

mdlmht.o: $(INC)/mdlmht.h $(INC)/mht.h $(INC)/except.h $(INC)/safeglobal.h \
	  $(INC)/list.h $(INC)/tree.h $(INC)/links.h $(INC)/vector.h
	$(C++) -c $(C++FLAGS) mdlmht.c

mht.o: $(INC)/mht.h $(INC)/safeglobal.h $(INC)/list.h $(INC)/tree.h\
	$(INC)/links.h $(INC)/vector.h $(INC)/except.h
	$(C++) -c $(C++FLAGS) mht.c

mht_group.o: $(INC)/mht.h $(INC)/pqueue.h $(INC)/apqueue.h \
	$(INC)/safeglobal.h $(INC)/list.h $(INC)/tree.h \
	$(INC)/links.h $(INC)/vector.h $(INC)/assign.h  $(INC)/except.h 
	$(C++) -c $(C++FLAGS) mht_group.c

mht_report.o: $(INC)/mht.h $(INC)/pqueue.h apqueue.h safeglobal.h list.h tree.h \
                links.h vector.h assign.h  except.h
	$(C++) -c $(C++FLAGS) mht_report.c

mht_track.o: mht.h safeglobal.h list.h tree.h links.h vector.h except.h
	$(C++) -c $(C++FLAGS) mht_track.c

apqueue_test.o: apqueue.h mem.h except.h
	$(C++) -c $(C++FLAGS) apqueue_test.c

apqueue.o: apqueue.h except.h safeglobal.h list.h assign.h vector.h
	$(C++) -c $(C++FLAGS) apqueue.c

assign_test.o: bassign.h mem.h except.h
	$(C++) -c $(C++FLAGS) assign_test.c

assign.o: assign.h queue.h except.h vector.h
	$(C++) -c $(C++FLAGS) assign.c

bassign.o: bassign.h safeglobal.h vector.h assign.h except.h
	$(C++) -c $(C++FLAGS) bassign.c

links.o: links.h safeglobal.h list.h except.h 
	$(C++) -c $(C++FLAGS) links.c

tree.o: tree.h except.h safeglobal.h list.h
	$(C++) -c $(C++FLAGS) tree.c

list.o: list.h except.h  safeglobal.h 
	$(C++) -c $(C++FLAGS) list.c

matrix.o: matrix.h vector.h safeglobal.h except.h
	$(C++) -c $(C++FLAGS) matrix.c

pqueue.o: pqueue.h except.h safeglobal.h 
	$(C++) -c $(C++FLAGS) pqueue.c

mem.o: mem.h except.h  safeglobal.h
	$(C++) -c $(C++FLAGS) mem.c

except.o: except.h  safeglobal.h 
	$(C++) -c $(C++FLAGS) except.c

normrand.o: normrand.h
	$(C++) -c $(C++FLAGS) normrand.c

